// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)
  accounts    Account[]
  categories  Category[]
  transactions Transaction[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Account {
   id      Int      @id @default(autoincrement())
   name    String   @db.VarChar(255)
   user    User     @relation(fields: [userId], references: [id])
   userId  Int
   transactions Transaction[]
   createdAt   DateTime    @default(now())
   updatedAt   DateTime    @updatedAt
}

model Category {
   id      Int      @id @default(autoincrement())
   name    String   @db.VarChar(255)
   user    User     @relation(fields: [userId], references: [id])
   userId  Int
   transactions Transaction[]
   createdAt   DateTime    @default(now())
   updatedAt   DateTime    @updatedAt
}

model Transaction {
  id      Int      @id @default(autoincrement())
  description    String   @db.VarChar(255)
  amount     Decimal @db.Decimal(10, 2) 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  // Relações
  accountId  Int
  account    Account   @relation(fields: [accountId], references: [id])
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
}